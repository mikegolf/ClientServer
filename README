Client Server communications learning project
=============================================

Initially started from a server echoing a text message from a client, taken from Microsoft sample projects, modified to allow server to send a message to client. Now handling multiple clients communicating with each other via the server. Target is to enable multiple clients (C++ console app using winsock, Cpp boost::asio app, android app, web plugin) to be able to connect and communicate using the same server.


19/07/14
========
Being modified for multiple clients to be able to establish two-way communication with each other and the server to facilitate the clients' identification and life cycle.

20/07/14
========
Multiple clients can now connect to each other via the server. The ClientManage class stores the clients references, identifying each client by an integer. 

Message from client to the server to be formatted with the first 3 characters containing a 3 digit number identifying message destination. The id 999 to be reserved for messages to the server, and 1-998 to be used for similar clients. Rest of the message (up to a maximum length of 253 characters) to contain the message. As of now, there is one particular message directed to the server to request the identification of the connected client, to which the server responds with the client id stored when the client first connected. Messages intended to other clients are redirected to them by the server.


28/07/14
========
GUI changes:
Client has different text boxes to enter destination client id and message. The main textbox is now a readonly field displaying the messages sent and received. Client also displays self client id and server ip which it is connected to.

Server's textbox is now readonly and server can not send text messages to clients as before.

Application changes:
- Server has a specific message to respond with client id.
- Id 999 used for server/configuration messages towards clients also.
- Changes to message handling at client.
- Code cleanup.

03/08/14
========
Added C++ Windows Console client which connects to the server using a wrapper class to communicate using Winsock on windows platforms.
The console client connects to the server, requests an id and starts listening to incoming messages.

=======================================================================================

Next steps: 
===========

- Make c++ console client handle signal to interrupt and let user type and send a message.
- GUI improvements to server to display connected clients and send a list to connected clients. Clients to be able to select other connected clients instead of having to input a text id. 
- Improvements to server to recycle client indices.
- Error, exception handling.
- Separate Utils project creation for encoding utilities.
- Cpp console client using Boost::asio.
- Messages backup in MS SQL database.
- Android app.
- Communicate using serialised objects.
- Design diagram.